#+title: Machine Learning with Python Tutorial
#+author: Nick Martin
#+email: nmartin84@gmail.com
#+created: [2021-01-23 13:54]
#+source: https://www.tutorialspoint.com/machine_learning_with_python/index.htm

* Machine Learning with Python

** Basics

Machine Learning basically allows the computer to make sense of the data. It
extracts patterns out of data using a set of algorithm and or method.

The idea behind Machine Learning, is to help humans make decisions, based on
data.

*** Machine Learning Model :ATTACH:
:PROPERTIES:
:ID:       741e7e44-ec35-4155-bbd9-80483d28816d
:END:

Before discussing the machine learning model, we must need to understand the
following formal definition of ML given by professor Mitchell:

#+begin_quote
“A computer program is said to learn from experience E with respect to some
class of tasks T and performance measure P, if its performance at tasks in T, as
measured by P, improves with experience E.”
#+end_quote

The above quote basically calls-out the three elements to the machine learning
objective, knowing this we can define Machine Learning as:
+ Improve their performance (P)
+ At executing some task (T)
+ Over time with Experience (E)

[[attachment:machine_learning_model.jpg]]


**** Task (T)

We can define (T "[[[[file:~/projects/orgmode/fleeting/202101231438-task.org][Task]]]]") as the real-world problem to be solved. The problem
which we are trying to solve can be finding housing prices, to marketing
strategy, etc. On the other hand, if we talk about Machine Learning, the
definition for (T) would be different, because our Task that we are trying to
solve is different than the normal.

So basically a (T) Task is said to be based on Machine Learning, when the (T) is
based on the process, and the system must follow for operating on data points.
The examples for Machine Learning are Classification, Regression, Structured
annotation, Clustering, Transcription, etc.

**** Experience (E)

So (E) is essentially our data that's used to build knowledge, which in turn is
applied towards solving our (T) by analyzing and finding patterns.

**** Performance (P)

Our (P) is a measure of how well our Machine Learning algorithm is performing
based on our expectations given its output. (P) is basically a quantitative
metric that tells how a model is performing Task (T), using its Experience (E).
There are many metrics that help understand the Machine Learning performance
(P), such as; accuracy score, F1 score, confusion matrix, precision, recall,
sensitivity, etc...

*** Challenges in Machine Learning

Essentially Machine Learning is still in it's early primes, and has many
improvements to be made, such as in the following areas:
+ quality of data :: Having good-quality data for ML algorithms is one of the
  biggest challenges. Use of low-quality data leads to the problems related to
  data preprocessing and feature extraction.
+ Time-Consuming task :: Another challenge faced by ML models is the consumption
  of time especially for data acquisition, feature extraction and retrieval.
+ Lack of specialist persons :: As ML technology is still in its infancy stage,
  availability of expert resources is a tough job.
+ No clear objective for formulating business problems :: Having no clear
  objective and well-defined goal for business problems is another key
  challenge for ML because this technology is not that mature yet.
+ Issue of overfitting & underfitting :: If the model is overfitting or
  underfitting, it cannot be represented well for the problem.
+ Curse of dimensionality :: Another challenge ML model faces is too many
  features of data points. This can be a real hindrance.
+ Difficulty in deployment :: Complexity of the ML model makes it quite
  difficult to be deployed in real life.

*** Applications of Machine Learning

We are in the midst golden-age of AI and Machine Learning. Some example
applications for machine learning are:
+ Emotion analysis
+ Sentiment analysis
+ Error detection and prevention
+ Weather forecasting and prediction
+ Stock market analysis and forecasting
+ Speech synthesis
+ Speech recognition
+ Customer segmentation
+ Object recognition
+ Fraud detection
+ Fraud prevention
+ Recommendation of products to customer in online shopping

** Methods for Machine Learning
:LOGBOOK:
CLOCK: [2021-01-23 Sat 19:47]--[2021-01-23 Sat 20:12] =>  0:25
:END:

Basically there are multiple Machine Learning algorithms, techniques and methods
that can be applied to build models for solving real-life problems by using data.

*** Different types of Methods

The following are various ML Methods based on some broad categories:

**** Supervised Learning

*Supervised Learning*: this is basically taking the input data, and associating it
with the expected outcome results. Some examples of this:
- x: input variables
- y: output variable
- ~Y=f(x)~

The idea would be to approximate the output given the input data we are given.
Supervised algorithms can be categorized as:
+ Classification
+ Regression

***** Classification

Predict the categorical output labels or response for the given input data. The
output will be based on what the model has learned in the training phase.

***** Regression

Predict output labels or responses that are continues numeric values, for the
given input data. The output will be based on what the model has learned in its
training phase.

**** Unsupervised Learning

Opposite of supervised Machine Learning algorithms, which basically means we
have no supervisor to provide any sort of guidance. This is for instance, which
we do not have the liberty of having pre-labeled training data and we want to
extract useful patterns from input data.

For instance, say you have input variables, but there would be no output
variable and the algorithms need to discover the interesting pattern in data for
learning.

Examples of unsupervised learning are: k-means clustering, k-nearest neighbors,
etc...

Unsupervised learning is categorized in the following:

***** Clustering

One of the most powerful unsupervised Machine Learning methods. Used to find
similarity as well as relationship patterns among data samples and then cluster
those samples into groups based on features. An example of this would be
grouping customers by their purchasing behavior.

***** Association

Essentially is another useful algorithm for finding patterns which further
represents the interesting relationships between various items. An example of
this, is to analyze a customers shopping patterns.

***** Dimensionality Reduction

Reduce number of feature variables for each data sample by selecting set of
principal or representative features. Question arises of why we need to reduce
the [[[[file:~/projects/orgmode/fleeting/202101232008-dimensionality.org][dimensionality]]]]? The reason behins is the problem of [[[[file:~/projects/orgmode/fleeting/202101232009-feature_space_complexity.org][feature space
complexity]]]] which arises when we start analyzing and extracting millions of
features from data samples. This problem generally refers to "curse of
[[[[file:~/projects/orgmode/fleeting/202101232008-dimensionality.org][dimensionality]]]]". Principal Component Analysis, K-nearest neighbors and
discriminant analysis are some of the popular algorithms for this purpose.

***** Anomaly Detection

Used to find the occurrences of rare events or observations that generally do
not occur. Some of the unsupervised algorithms like clustering, KNN can detect
anomalies based on the data and its features.
**** Semi-Supervised Learning

Neither supervised nor unsupervised, but a mixture of both. They tend to use a
small amount of pre-labeled annotated data and large unsupervised learning
component, i.e. lots of unlabeled data for training.

+ The first and simple approach is to build with an initial small amount of
  labeled and annotated data, and then build the unsupervised model by applying
  the same to the large amounts of unlabeled data to get more labeled samples.
  Now, train the model on them and repeat the process.
+ Second approach needs some extra efforts. We first use unsupervised methods to
  cluster similar data samples, annotate these groups and then use a combination
  of this information to train the model.

**** Reinforcement Learning

These methods are rarely used. In these type of algorithms, there would be an
agent that we want to train over a period of time so that it can interact with a
specific environment. The agent will follow a set of strategies for interacting
with the environment, and then after observing it will take actions regards the
current state of the environment. Following are the main steps for reinforcement
learning:
- Step 1 :: First, we need to prepare an agent with some initial set of
 strategies.
- Step 2 :: Then observe the environment and its current state.
- Step 3 :: Next, select the optimal policy regards the current state of the
 environment and perform important action.
- Step 4 :: Now, the agent can get corresponding reward or penalty as per
 accordance with the action taken by it in previous step.
- Step 5 :: Now, we can update the strategies if it is required so.
- Step 6 :: At last, repeat steps 2-5 until the agent got to learn and adopt the
 optimal policies.

*** Tasks suited for Machine Learning :ATTACH:
:PROPERTIES:
:ID:       626daac0-c76e-47ff-8a83-a939263a1224
:END:

[[attachment:task_for_ml_problems.jpg]]

**** Batch Learning

In many cases, we have end-to-end Machine Learning systems in which we need to
train the model in one go by using whole available training data. Such kind of
learning method or algorithm is called Batch or Offline learning. It is called
Batch or Offline learning because it is a one-time procedure and the model will
be trained with data in one single batch. The following are the main steps of
Batch learning methods:
- Step 1 :: First, we need to collect all the training data for start training
  the model.
- Step 2 :: Now, start the training of model by providing whole training data in
  one go.
- Step 3 :: Next, stop learning/training process once you got satisfactory
  results/performance.
- Step 4 :: Finally, deploy this trained model into production. Here, it will
  predict the output for new data sample.

**** Online Learning

Is the opposite of batch learning, and the data is provided in multiple
incremental batches, called mini-batches, to the algorithm. Following are the
main steps for online learning:
- Step 1 :: First, we need to collect all the training data for starting
  training of the model.
- Step 2 :: Now, start the training of model by providing a mini-batch of
  training data to the algorithm.
- Step 3 :: Next, we need to provide the mini-batches of training data in
  multiple increments to the algorithm.
- Step 4 :: As it will not stop like batch learning hence after providing whole
  training data in mini-batches, provide new data samples also to it.
- Step 5 :: Finally, it will keep learning over a period of time based on the
  new data samples.

**** Based on Generalization Approach

***** Instance Based Learning
:LOGBOOK:
CLOCK: [2021-01-23 Sat 21:33]
:END:

Instance based is one of the useful Machine Learning methods, by doing
generalization based on the input data. It is opposite of the previously
mentioned learning methods, in that this kind of learning involves Machine
Learning systems as well as methods that uses the raw data points themselves to
draw the outcomes for newer data samples without building an explicit model on
training data.

Or in simpler terms, it'll basically start working by looking at the input data
and then use a similarity metric, it will generalize and predict the new data
points.

***** Model Based Learning

An iterative process takes place on the Machine Learning models that are built
based on various model parameters, called [[[[file:~/projects/orgmode/fleeting/202101232139-hyperparameters.org][hyperparameters]]]] and in which input
data is used to extract features.

In this model, the [[[[file:~/projects/orgmode/fleeting/202101232139-hyperparameters.org][hyperparameters]]]] are used to optimize based on various
model validation techniques.

** Data loading for Machine Learning Projects

The first and foremost thing to start any Machine Learning project, is *data*. The
most common format for any data to be used is *csv*.

*** Considerations while loading CSV data

When loading data from CSV into our Machine Learning project, it is imperative
that we take into consideration the following key items:

**** File Header

The header contains the metadata for the given columns, to help categorize or to
put in summarization what the data for the given column entails. One should keep
in mind when dealing with headers:
+ If a header exists, the header data will be taken into account and labeled
  accordingly.
+ If no header exists, then we need to define our header names to categorize our
  data.

**** Comments

We need to consider that comments may be added to the csv file, comments are
added at the beginning of a line and notated with a ~#~ hashtag.

**** Delimeter

Obviously, the delimeter for which will tell the interpreter how to separate the
data from one another. This is commonly assigned to the ~,~ character.

**** Quotes

It's essential to keep in mind of quotes, because quotes are used to group
together a string of words separated by white-spaces, which when not quoted could
lead to issues.

*** Methods to load CSV data file

So basically this will cover a few functions which can be applied to loading CSV
data into python.

**** Loading CSV with the Python Standard Library

The first and most used approach is using the [[[[file:~/projects/orgmode/programming/python/202101021658-csv.org][csv]]]] module provided with
Python and the ~reader()~ function.

#+begin_example
import csv
import numpy as np

path=r"c:\iris.csv"

with open(path, 'r') as f:
    reader = csv.reader(f, delimter=',')
    headers = next(reader)
    data = list(reader)
    data = np.array(data).astype(float)
#+end_example



** Understanding Data with Statistics
** Understanding data with Visualization
** Preparing data
** Data Feature Selection
