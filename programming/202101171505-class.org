#+title: class
#+author: Nick Martin
#+email: nmartin84@gmail.com
#+created: [2021-01-17 15:05]

In [[[[file:202101171440-object_oriented_programming.org][object-oriented programming]]]], a class is an extensible
program-code-template for creating [[[[file:202101171444-object.org][object]]]]'s, providing initial values for
state ([[[[file:202101171507-member_variable.org][member variable]]]]) and implementations of behavior (member functions or
[[[[file:20210110172957-methods.org][methods]]]]). In many languages, the class name is used as the name for the class
(the template itself), the name for the default constructor of the class (a
subroutine that creates objects), and as the type of objects generated by
instantiating the class; these distinct concepts are easily conflated.

When an [[[[file:202101171444-object.org][object]]]] is created by a constructor of the class, the resulting object is
called an instance of the class, and the [[[[file:202101171507-member_variable.org][member variable]]]] specific to the object
are called instance variables, to contrast with the class variables shared
across the class.

In some languages, classes are only a compile-time feature (new classes cannot
be declared at run-time), while in other languages classes are first-class
citizens, and are generally themselves objects (typically of type Class or
similar). In these languages, a class that creates classes is called a
metaclass.
